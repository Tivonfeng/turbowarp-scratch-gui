<!DOCTYPE html>
<html>

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="google" value="notranslate">
	<meta name="description"
		content="<%= htmlWebpackPlugin.options.APP_NAME %> is a Scratch mod with a compiler to run projects faster, dark mode for your eyes, a bunch of addons to improve the editor, and more." />
	<title>
		<%= htmlWebpackPlugin.options.title %>
	</title>
	<link rel="apple-touch-icon" href="<%= htmlWebpackPlugin.options.root %>images/apple-touch-icon.png">
	<% if (htmlWebpackPlugin.options.root==="/" || htmlWebpackPlugin.options.root==="" ) { %>
		<link rel="manifest" href="<%= htmlWebpackPlugin.options.root %>manifest.webmanifest">
		<% } %>
			<style>
				.splash-screen {
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0;
					left: 0;
					display: flex;
					flex-direction: column;
					gap: 1rem;
					align-items: center;
					justify-content: center;
					text-align: center;
					font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
				}

				.splash-screen[hidden] {
					display: none;
				}

				.splash-screen[data-theme="dark"] {
					background-color: #333;
					color: white;
				}

				.splash-screen>* {
					max-width: 80%;
				}

				.splash-spinner:after {
					content: " ";
					display: block;
					width: 64px;
					height: 64px;
					border-radius: 50%;
					border: 6px solid;
					border-color: currentColor transparent currentColor transparent;
					animation: splash-spinner 1.2s linear infinite;
				}

				@keyframes splash-spinner {
					0% {
						transform: rotate(0deg);
					}

					100% {
						transform: rotate(360deg);
					}
				}

				.splash-error-title {
					font-weight: bold;
				}

				.splash-error-title a {
					color: inherit;
				}

				.splash-errors {
					font-family: monospace;
				}

				.splash-error-list {
					white-space: pre-wrap;
				}

				.splash-reset {
					color: inherit;
					background: none;
					padding: 0;
					margin: 0;
					border: none;
					text-decoration: underline;
					cursor: pointer;
				}

				.splash-reset:disabled {
					opacity: 0.8;
				}
			</style>
	<!-- <script async src="//api.paas.plus/js/errlog.js"></script>
	<script src="../js/jquery.min.js"></script>
	<script src="../js/jquery.cokie.min.js"></script>
	<script src="../js/jquery.qrcode.min.js"></script>
	<script src="../js/qiniu.min.js"></script>
	<script src="../js/common.js?v=27"></script> -->
	<script>
	try{
		let canShare = true;
		let uploadParam = {};
		let workId = urlParams('workId');
		let unitId = urlParams('unitId');
		let workFileUrl = urlParams('workFile'); //SB3路径
		let workName = urlParams('workName'); //作业名
		if (workName) workName = decodeURIComponent(workName);
		let departId = urlParams('departId'); //班级ID
		let additionalId = urlParams('additionalId'); //附加作业ID
		let scene = urlParams("scene") || 'create'; //来源
		let userInfo = getUserInfo();
		let qn_token = getQiniuToken();
		let userToken = getUserToken();
		let workStatus = 0;
		setInterval(function () {
			qn_token = getQiniuToken();
			}, 600 * 1000);
		} catch (e) {
			console.log(e)
		}
		window.scratchConfig = {
			menubar: {
				logo: {
					show: true,
					url: "https://scratch.mit.edu/images/logo_sm.png",
					handleClickLogo: () => {
						console.log('点击LOGO')
						//TODO 跳转
					}
				},
				shareButton: {
					show: false,
					handleClickShare: () => {
						console.log('分享按钮')
						/*window.scratch.getProjectCover(cover => {
						  //TODO 获取到作品截图
						  console.log(cover)
						})
						window.scratch.getProjectFile(file => {
						  //TODO 获取到项目文件
						  console.log(file)
						}) */
					}
				},
				//我的物品按钮
				myStuff: {
					show: true, //是否显示
					url: '/account/center' //跳转的连接
				},
				//用户头像按钮
				userAvatar: {
					show: true, //是否显示
					username: '未登录', //用户名
					avatar: window.location.protocol + "//" + window.location.host + '/avatar.png', //用户头像
					handleClick() {
						//点击头像，可以弹出登录框等操作
						console.log('点击头像');
						window.open("/account/settings/BaseSetting");
					}
				},
				customButtons: [
					{
						show: true, //是否显示
						buttonName: '分享', //按钮名
						style: { //按钮样式
							color: 'white',
							background: 'hsla(30, 100%, 55%, 1)',
						},
						handleClick: () => { //按钮事件
							console.log("自定义按钮1");
							console.log('分享按钮')
							/*window.scratch.getProjectCover(cover => {
							  //TODO 获取到作品截图
							})
							window.scratch.getProjectFile(file => {
							  //TODO 获取到项目文件
							})
							  */
							// 获取到项目名
							var projectName = window.scratch.getProjectName()
							console.log(projectName);
							window.scratch.setProjectName('测试项目')
							console.log(window.scratch.getTimeCount())
						}
					},
					//可继续新增按钮
				],
				timecount: true
			},
			open: true,
			assertCDN: '/static',
			defaultProjectURL: '/project.sb3',
			asserts: {
				handleBeforeSpriteLibraryOpen() {
					console.log("角色库打开")
					//追加素材库
					// window.scratch.pushSpriteLibrary()
					return true;
				},
			},

		};
	</script>
</head>

<body>
	<!-- <noscript>
      <div class="splash-screen">
        <div>
          <h1><%= htmlWebpackPlugin.options.APP_NAME %> requires JavaScript</h1>
          <p>Consider using <a href="https://desktop.turbowarp.org/">TurboWarp Desktop</a> if you are afraid of remote JavaScript.</p>
        </div>
      </div>
    </noscript> -->

	<div class="splash-screen spash-waiting-for-js" hidden>
		<div class="splash-spinner"></div>

		<div class="splash-error-title" hidden>Something went wrong. <a
				href="https://scratch.mit.edu/users/GarboMuffin/#comments" target="_blank" rel="noreferrer">Please
				report</a> with the information below.</div>
		<div class="splash-errors" hidden></div>
		<button class="splash-reset" hidden>Click here to reset caches (can fix some errors)</button>
	</div>

	<script>
		(function () {
			'use strict';

			var theme = '';
			var accent = '#ff4c4c';

			try {
				var themeSetting = localStorage.getItem('tw:theme');
			} catch (e) {
				// ignore
			}
			if (themeSetting === 'light') {
				theme = 'light';
			} else if (themeSetting === 'dark') {
				theme = 'dark';
			} else if (themeSetting) {
				try {
					var parsed = JSON.parse(themeSetting);
					if (parsed.accent === 'purple') {
						accent = '#855cd6';
					} else if (parsed.accent === 'blue') {
						accent = '#4c97ff';
					}
					if (parsed.gui === 'dark' || parsed.gui === 'light') {
						theme = parsed.gui;
					}
				} catch (e) {
					// ignore
				}
			}

			if (!theme) {
				theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
			}

			var splash = document.querySelector('.spash-waiting-for-js');
			splash.setAttribute('data-theme', theme);
			if (theme !== 'dark') {
          <% if (htmlWebpackPlugin.options.isEditor) { %>
					splash.style.backgroundColor = accent;
					splash.style.color = 'white';
          <% } else { %>
					splash.style.color = accent;
          <% } %>
        }
			splash.hidden = false;

			var splashErrorTitle = document.querySelector('.splash-error-title');
			var splashError = document.querySelector('.splash-errors');
			var splashReset = document.querySelector('.splash-reset');

			var totalErrors = 0;
			window.onerror = function (event, source, line, col, err) {
				if (++totalErrors > 5) return; // dont bother logging more
				splashErrorTitle.hidden = splashError.hidden = splashReset.hidden = false;
				var el = document.createElement('div');
				el.textContent = 'Error (splash) in ' + source + ' (' + line + ':' + col + '): ' + err;
				splashError.appendChild(el);
			};
			splashReset.onclick = function () {
				splashReset.disabled = true;
				function hardRefresh() {
					var search = location.search.replace(/[?&]nocache=\d+/, '');
					location.replace(location.pathname + search + (search ? '&' : '?') + 'nocache=' + Math.floor(Math.random() * 100000));
				}
				if ('serviceWorker' in navigator) {
					setTimeout(hardRefresh, 5000);
					navigator.serviceWorker.getRegistration(<%= JSON.stringify(htmlWebpackPlugin.options.root) %>)
						.then(function (registration) {
							if (registration) {
								return registration.unregister();
							}
						})
						.then(hardRefresh)
						.catch(hardRefresh);
				} else {
					hardRefresh();
				}
			};

			window.SplashEnd = () => {
				splash.hidden = true;
				window.onerror = null;
			};
		})();
	</script>
	<div id="app"></div>
</body>

</html>